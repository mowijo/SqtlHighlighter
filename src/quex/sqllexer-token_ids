/* -*- C++ -*- vim: set syntax=cpp:
 * PURPOSE: File containing definition of token-identifier and
 *          a function that maps token identifiers to a string
 *          name.
 *
 * NOTE: This file has been created automatically by Quex.
 *       Visit quex.org for further info.
 *
 * DATE: Tue Feb 19 09:10:47 2013
 *
 * (C) 2005-2010 Frank-Rene Schaefer
 * ABSOLUTELY NO WARRANTY                                           */
#ifndef __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_SQLLEXER__QUEX_TOKEN__
#define __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_SQLLEXER__QUEX_TOKEN__

#ifndef __QUEX_OPTION_PLAIN_C
#   include<cstdio> 
#else
#   include<stdio.h> 
#endif

/* The token class definition file can only be included after 
 * the definition on TERMINATION and UNINITIALIZED.          
 * (fschaef 12y03m24d: "I do not rememember why I wrote this.
 *  Just leave it there until I am clear if it can be deleted.")   */
#include "sqllexer-token"

const QUEX_TYPE_TOKEN_ID QUEX_TKN_COMMENT                        = ((QUEX_TYPE_TOKEN_ID)10000);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_COMMENTEND                     = ((QUEX_TYPE_TOKEN_ID)10001);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_COMMENTSTART                   = ((QUEX_TYPE_TOKEN_ID)10002);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_DEDENT                         = ((QUEX_TYPE_TOKEN_ID)3);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_FAILURE                        = ((QUEX_TYPE_TOKEN_ID)10003);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_GREEDYCOMMENT                  = ((QUEX_TYPE_TOKEN_ID)10004);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_IDENTIFIER                     = ((QUEX_TYPE_TOKEN_ID)10005);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_INDENT                         = ((QUEX_TYPE_TOKEN_ID)2);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_ALLOCATE               = ((QUEX_TYPE_TOKEN_ID)10006);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_ALTER                  = ((QUEX_TYPE_TOKEN_ID)10007);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_ASSERTION              = ((QUEX_TYPE_TOKEN_ID)10008);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_AUTHORIZATION          = ((QUEX_TYPE_TOKEN_ID)10009);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_BY                     = ((QUEX_TYPE_TOKEN_ID)10010);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_CATALOG                = ((QUEX_TYPE_TOKEN_ID)10011);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_CHARACTER              = ((QUEX_TYPE_TOKEN_ID)10012);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_CLOSE                  = ((QUEX_TYPE_TOKEN_ID)10013);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_COLLATION              = ((QUEX_TYPE_TOKEN_ID)10014);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_COMMIT                 = ((QUEX_TYPE_TOKEN_ID)10015);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_CONNECT                = ((QUEX_TYPE_TOKEN_ID)10016);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_CONNECTION             = ((QUEX_TYPE_TOKEN_ID)10017);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_CONSTRAINTS            = ((QUEX_TYPE_TOKEN_ID)10018);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_CREATE                 = ((QUEX_TYPE_TOKEN_ID)10019);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_CURSOR                 = ((QUEX_TYPE_TOKEN_ID)10020);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_DEALLOCATE             = ((QUEX_TYPE_TOKEN_ID)10021);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_DECLARE                = ((QUEX_TYPE_TOKEN_ID)10022);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_DELETE                 = ((QUEX_TYPE_TOKEN_ID)10023);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_DESCRIBE               = ((QUEX_TYPE_TOKEN_ID)10024);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_DESCRIPTOR             = ((QUEX_TYPE_TOKEN_ID)10025);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_DIAGNOSTICS            = ((QUEX_TYPE_TOKEN_ID)10026);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_DISCONNECT             = ((QUEX_TYPE_TOKEN_ID)10027);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_DOMAIN                 = ((QUEX_TYPE_TOKEN_ID)10028);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_EXECUTE                = ((QUEX_TYPE_TOKEN_ID)10029);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_FETCH                  = ((QUEX_TYPE_TOKEN_ID)10030);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_FROM                   = ((QUEX_TYPE_TOKEN_ID)10031);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_FUNCTION               = ((QUEX_TYPE_TOKEN_ID)10032);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_GET                    = ((QUEX_TYPE_TOKEN_ID)10033);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_GRANT                  = ((QUEX_TYPE_TOKEN_ID)10034);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_GROUP                  = ((QUEX_TYPE_TOKEN_ID)10035);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_HAVING                 = ((QUEX_TYPE_TOKEN_ID)10036);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_IMMEDIATE              = ((QUEX_TYPE_TOKEN_ID)10037);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_INSERT                 = ((QUEX_TYPE_TOKEN_ID)10038);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_LOCAL                  = ((QUEX_TYPE_TOKEN_ID)10039);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_MERGE                  = ((QUEX_TYPE_TOKEN_ID)10040);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_MODULE                 = ((QUEX_TYPE_TOKEN_ID)10041);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_NAMES                  = ((QUEX_TYPE_TOKEN_ID)10042);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_OPEN                   = ((QUEX_TYPE_TOKEN_ID)10043);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_ORDER                  = ((QUEX_TYPE_TOKEN_ID)10044);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_PREPARE                = ((QUEX_TYPE_TOKEN_ID)10045);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_PROCEDURE              = ((QUEX_TYPE_TOKEN_ID)10046);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_REVOKE                 = ((QUEX_TYPE_TOKEN_ID)10047);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_ROLLBACK               = ((QUEX_TYPE_TOKEN_ID)10048);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_SAVEPOINT              = ((QUEX_TYPE_TOKEN_ID)10049);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_SCHEMA                 = ((QUEX_TYPE_TOKEN_ID)10050);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_SELECT                 = ((QUEX_TYPE_TOKEN_ID)10051);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_SESSION                = ((QUEX_TYPE_TOKEN_ID)10052);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_SET                    = ((QUEX_TYPE_TOKEN_ID)10053);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_SQL                    = ((QUEX_TYPE_TOKEN_ID)10054);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_TABLE                  = ((QUEX_TYPE_TOKEN_ID)10055);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_TEMPORARY              = ((QUEX_TYPE_TOKEN_ID)10056);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_TIME                   = ((QUEX_TYPE_TOKEN_ID)10057);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_TRANSACTION            = ((QUEX_TYPE_TOKEN_ID)10058);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_TRANSLATION            = ((QUEX_TYPE_TOKEN_ID)10059);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_TRIGGER                = ((QUEX_TYPE_TOKEN_ID)10060);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_UPDATE                 = ((QUEX_TYPE_TOKEN_ID)10061);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_VIEW                   = ((QUEX_TYPE_TOKEN_ID)10062);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_WHERE                  = ((QUEX_TYPE_TOKEN_ID)10063);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_WORK                   = ((QUEX_TYPE_TOKEN_ID)10064);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_KEYWORD_ZONE                   = ((QUEX_TYPE_TOKEN_ID)10065);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_NODENT                         = ((QUEX_TYPE_TOKEN_ID)4);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_NUMBER                         = ((QUEX_TYPE_TOKEN_ID)10066);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_AMPERSAND              = ((QUEX_TYPE_TOKEN_ID)10067);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_ASTERISK               = ((QUEX_TYPE_TOKEN_ID)10068);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_CIRCUMFLEX             = ((QUEX_TYPE_TOKEN_ID)10069);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_COLON                  = ((QUEX_TYPE_TOKEN_ID)10070);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_COMMA                  = ((QUEX_TYPE_TOKEN_ID)10071);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_EQUALS                 = ((QUEX_TYPE_TOKEN_ID)10072);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_GREATER_THAN           = ((QUEX_TYPE_TOKEN_ID)10073);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_LEFT_BRACE             = ((QUEX_TYPE_TOKEN_ID)10074);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_LEFT_BRACKET           = ((QUEX_TYPE_TOKEN_ID)10075);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_LEFT_BRACKET_TRIGRAPH  = ((QUEX_TYPE_TOKEN_ID)10076);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_LEFT_PAREN             = ((QUEX_TYPE_TOKEN_ID)10077);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_LESS_THAN              = ((QUEX_TYPE_TOKEN_ID)10078);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_MINUS_SIGN             = ((QUEX_TYPE_TOKEN_ID)10079);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_PERCENT                = ((QUEX_TYPE_TOKEN_ID)10080);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_PERIOD                 = ((QUEX_TYPE_TOKEN_ID)10081);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_PLUS_SIGN              = ((QUEX_TYPE_TOKEN_ID)10082);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_QUESTION_MARK          = ((QUEX_TYPE_TOKEN_ID)10083);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_RIGHT_BRACE            = ((QUEX_TYPE_TOKEN_ID)10084);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_RIGHT_BRACKET          = ((QUEX_TYPE_TOKEN_ID)10085);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_RIGHT_BRACKET_TRIGRAPH = ((QUEX_TYPE_TOKEN_ID)10086);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_RIGHT_PAREN            = ((QUEX_TYPE_TOKEN_ID)10087);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_SEMICOLON              = ((QUEX_TYPE_TOKEN_ID)10088);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_SOLIDUS                = ((QUEX_TYPE_TOKEN_ID)10089);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_UNDERSCORE             = ((QUEX_TYPE_TOKEN_ID)10090);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_SPECIAL_VERTICAL_BAR           = ((QUEX_TYPE_TOKEN_ID)10091);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_STRING                         = ((QUEX_TYPE_TOKEN_ID)10092);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_TERMINATION                    = ((QUEX_TYPE_TOKEN_ID)0);
const QUEX_TYPE_TOKEN_ID QUEX_TKN_UNINITIALIZED                  = ((QUEX_TYPE_TOKEN_ID)1);


QUEX_NAMESPACE_TOKEN_OPEN
extern const char* QUEX_NAME_TOKEN(map_id_to_name)(const QUEX_TYPE_TOKEN_ID TokenID);
QUEX_NAMESPACE_TOKEN_CLOSE

#endif /* __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_SQLLEXER__QUEX_TOKEN__ */
